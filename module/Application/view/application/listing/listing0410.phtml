<?php 
/**
 * ZF2 Buch Kapitel 4
 * 
 * Das Buch "Zend Framework 2 - Das Praxisbuch"
 * von Ralf Eggert ist im Galileo-Computing Verlag erschienen. 
 * ISBN 978-3-8362-2610-3
 * 
 * @package    Application
 * @author     Ralf Eggert <r.eggert@travello.de>
 * @copyright  Alle Listings sind urheberrechtlich geschützt!
 * @link       http://www.zendframeworkbuch.de/ und http://www.galileocomputing.de/3460
 */

/**
 * Listing 4.10 view script
 * 
 * @package    Application
 */
?>
<div class="row">
<div class="span9">
<h1>Listing 4.10</h1>
<h3>Logging von Pizzabelägen mit Logger, Writer und Formatter</h3>
<pre>
&lt;?php 
// setup autoloading
require_once LUIGI_ROOT . '/vendor/autoload.php';

// configure Autoloader
$loader = new Zend\Loader\StandardAutoloader();
$loader->registerNamespace('Pizza', LUIGI_ROOT . '/module/Pizza/src/Pizza');
$loader->register();

// define log file
$logFile = LUIGI_ROOT . '/data/log/pizza.log';

// prepare logger
$formatter = new Zend\Log\Formatter\Simple(
    '%timestamp% - %priorityName% (%priority%) - %message% %extra%', 
    'Y-m-d H:i:s'
);
$writer = new Zend\Log\Writer\Stream($logFile);
$writer->setFormatter($formatter);
$logger = new Zend\Log\Logger();
$logger->addWriter($writer);

// get toppings
$toppings = Pizza\Service\PizzaService::getRandomTopping(4);

// log pizza
$logger->log(Zend\Log\Logger::INFO, 'Pizza mit ' . implode(', ', $toppings) . ' belegt');

// output log
echo implode('', file($logFile));
</pre>
<h3>Ausgabe</h3>
<pre>
<?php 
// setup autoloading
require_once LUIGI_ROOT . '/vendor/autoload.php';

// configure Autoloader
$loader = new Zend\Loader\StandardAutoloader();
$loader->registerNamespace('Pizza', LUIGI_ROOT . '/module/Pizza/src/Pizza');
$loader->register();

// define log file
$logFile = LUIGI_ROOT . '/data/log/pizza.log';

// prepare logger
$formatter = new Zend\Log\Formatter\Simple(
    '%timestamp% - %priorityName% (%priority%) - %message% %extra%', 
    'Y-m-d H:i:s'
);
$writer = new Zend\Log\Writer\Stream($logFile);
$writer->setFormatter($formatter);
$logger = new Zend\Log\Logger();
$logger->addWriter($writer);

// get toppings
$toppings = Pizza\Service\PizzaService::getRandomTopping(4);

// log pizza
$logger->log(Zend\Log\Logger::INFO, 'Pizza mit ' . implode(', ', $toppings) . ' belegt');

// output log
echo implode('', file($logFile));
?>
</pre>
</div>
</div>
