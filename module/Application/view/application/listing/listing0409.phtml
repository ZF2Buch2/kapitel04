<?php 
/**
 * ZF2 Buch Kapitel 4
 * 
 * Das Buch "Zend Framework 2 - Das Praxisbuch"
 * von Ralf Eggert ist im Galileo-Computing Verlag erschienen. 
 * ISBN 978-3-8362-2610-3
 * 
 * @package    Application
 * @author     Ralf Eggert <r.eggert@travello.de>
 * @copyright  Alle Listings sind urheberrechtlich geschÃ¼tzt!
 * @link       http://www.zendframeworkbuch.de/ und http://www.galileocomputing.de/3460
 */

/**
 * Listing 4.9 view script
 * 
 * @package    Application
 */
?>
<div class="row">
<div class="span9">
<h1>Listing 4.9</h1>
<h3>Einsatz des <code>ClassCache</code> Patterns</h3>
<pre>
&lt;?php 
// setup autoloading
require_once LUIGI_ROOT . '/vendor/autoload.php';

// configure Autoloader
$loader = new Zend\Loader\StandardAutoloader();
$loader->registerNamespace('Pizza', LUIGI_ROOT . '/module/Pizza/src/Pizza');
$loader->register();

// configure cache storage
$cache = Zend\Cache\StorageFactory::factory(array(
    'adapter' => array(
        'name' => 'filesystem',
        'options' => array(
            'namespace' => 'pizza',
            'ttl'       => 5,
            'cache_dir' => LUIGI_ROOT . '/data/cache',
        ),
    ),
    'plugins' => array(
        'serializer',
    ),
));

// configure cache pattern
$classCache = Zend\Cache\PatternFactory::factory('class', array(
    'class'   => 'Pizza\Service\PizzaService',
    'storage' => $cache,
));

// get result
$randomTopping = $classCache->call('getRandomTopping', array(3));

// output supported data types
Zend\Debug\Debug::dump($randomTopping);
</pre>
<h3>Ausgabe</h3>
<?php 
// setup autoloading
require_once LUIGI_ROOT . '/vendor/autoload.php';

// configure Autoloader
$loader = new Zend\Loader\StandardAutoloader();
$loader->registerNamespace('Pizza', LUIGI_ROOT . '/module/Pizza/src/Pizza');
$loader->register();

// configure cache storage
$cache = Zend\Cache\StorageFactory::factory(array(
    'adapter' => array(
        'name' => 'filesystem',
        'options' => array(
            'namespace' => 'pizza',
            'ttl'       => 5,
            'cache_dir' => LUIGI_ROOT . '/data/cache',
        ),
    ),
    'plugins' => array(
        'serializer',
    ),
));

// configure cache pattern
$classCache = Zend\Cache\PatternFactory::factory('class', array(
    'class'   => 'Pizza\Service\PizzaService',
    'storage' => $cache,
));

// get result
$randomTopping = $classCache->call('getRandomTopping', array(3));

// output supported data types
Zend\Debug\Debug::dump($randomTopping); ?>
</div>
</div>
